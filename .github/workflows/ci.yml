name: API Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  api-tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js (required for JSON Server)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install dependencies (JSON Server and your project dependencies)
      - name: Install dependencies
        run: |
          npm install -g json-server
          npm install

      # Start JSON Server
      - name: Start JSON Server
        run: |
          json-server --watch employees.json --port 3000 &
        env:
          CI: true

      # Wait for JSON Server to be ready
      - name: Wait for JSON Server
        run: sleep 5

      # Run your API tests
      - name: Run API Tests
        run: |
          mvn clean test 

      # Stop the JSON Server
      - name: Stop JSON Server
        run: |
          kill $(lsof -t -i:3000)












#name: Java CI for Selenium Tests
#
#on:
#  push:
#    branches:
#      - main
#      - develop
#      - feature/*  # This will trigger for any feature branches
#  pull_request:
#    branches:
#      - main
#      - develop
#      - feature/*  # This will trigger for pull requests targeting these branches
#  workflow_dispatch:  # Allows for manual triggering of the workflow
#
#jobs:
#  test:
#    runs-on: ubuntu-latest
#
#    steps:
#      # Step 1: Checkout the code
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      # Step 2: Set up JDK 17
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17
#          distribution: 'temurin'
#
#      # Step 3: Modify config.properties with secrets
##      - name: Update config.properties with secrets
##        run: |
##          sed -i "s/USER_NAME/${{ secrets.USER_NAME }}/g" src/test/resources/config/configuration.properties
##          sed -i "s/ACCESS_KEY/${{ secrets.ACCESS_KEY }}/g" src/test/resources/config/configuration.properties
#
#      # Step 4: Cache Maven dependencies
#      - name: Cache Maven dependencies
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#
#      # Step 5: Install Maven dependencies
#      - name: Install Maven dependencies
#        run: mvn install -DskipTests=true
#
#      # Step 6: Run Tests (Non-Headless Mode)
#      - name: Run Tests
#        run: mvn test
#
#      # Step 7: Upload Test Results (Optional)
#      - name: Archive test results
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-results
#          path: target/surefire-reports/
